version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: prompt-share-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-prompt_share}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - prompt-share-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: prompt-share-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - cluster.name=prompt-share-cluster
      - node.name=prompt-share-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - prompt-share-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Python Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prompt-share-backend
    restart: unless-stopped
    environment:
      - MONGODB_HOST=mongodb:27017
      - MONGODB_URL=mongodb://${MONGODB_USER:-admin}:${MONGODB_PASSWORD:-password}@mongodb:27017/${MONGODB_DATABASE:-prompt_share}?authSource=admin
      - MONGODB_USER=${MONGODB_USER:-admin}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD:-password}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-prompt_share}
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_INDEX=${ELASTICSEARCH_INDEX:-prompt_share}
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    volumes:
      - ${CLAUDE_DATA_PATH:-~/.claude}:/home/appuser/.claude:ro
    depends_on:
      mongodb:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - prompt-share-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # React Frontend
  frontend:
    build:
      context: ./claude-viewer-frontend
      dockerfile: Dockerfile
    container_name: prompt-share-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - prompt-share-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongodb_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  prompt-share-network:
    driver: bridge